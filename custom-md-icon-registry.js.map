{
  "version": 3,
  "sources": [
    "custom-md-icon-registry.ts"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,EAAc,MAAM,eAAe,CAAC;AACnE,OAAO,EAAE,EAAE,EAAE,MAAM,oBAAoB,CAAC;AACxC,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnD,OAAO,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACrC,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AAEzD;;;;;;;;;;;;GAYG;AACH,MAAM,CAAC,IAAM,SAAS,GAAG,IAAI,cAAc,CAAqB,UAAU,CAAC,CAAC;AAU5E;;;GAGG;AAEH;IAA0C,wCAAc;IAGtD,8BAAY,IAAU,EAAE,SAAuB,EAAqB,QAAuB;QAA3F,YACE,kBAAM,IAAI,EAAE,SAAS,CAAC,SAEvB;QALO,0BAAoB,GAAe,EAAE,CAAC;QAI5C,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;;IACjC,CAAC;IAED,8CAAe,GAAf,UAAgB,QAAQ,EAAE,SAAS;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACjE,CAAC;QACD,MAAM,CAAC,iBAAM,eAAe,YAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IACpD,CAAC;IAEO,8CAAe,GAAvB,UAAwB,QAAuB;QAA/C,iBAOC;QANC,IAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1C,QAAQ,CAAC,OAAO,CAAC,UAAA,IAAI;YACnB,mFAAmF;YACnF,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC/B,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;IACL,CAAC;IACI,mCAAc,GAArB,cAA0B,MAAM,CAAC,CAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAhJ;IAAA,2BAAC;AAAD,CAvBA,AAuBC,CAvByC,cAAc,GAuBvD",
  "file": "custom-md-icon-registry.js",
  "sourceRoot": "",
  "sourcesContent": [
    "import { InjectionToken, Inject, Injectable } from '@angular/core';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { MdIconRegistry } from '@angular/material';\r\nimport { Http } from '@angular/http';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n/**\r\n * Use SVG_ICONS (and SvgIconInfo) as \"multi\" providers to provide the SVG source\r\n * code for the icons that you wish to have preloaded in the `CustomMdIconRegistry`\r\n * For compatibility with the MdIconComponent, please ensure that the SVG source has\r\n * the following attributes:\r\n *\r\n * * `xmlns=\"http://www.w3.org/2000/svg\"`\r\n * * `focusable=\"false\"` (disable IE11 default behavior to make SVGs focusable)\r\n * * `height=\"100%\"` (the default)\r\n * * `width=\"100%\"` (the default)\r\n * * `preserveAspectRatio=\"xMidYMid meet\"` (the default)\r\n *\r\n */\r\nexport const SVG_ICONS = new InjectionToken<Array<SvgIconInfo>>('SvgIcons');\r\nexport interface SvgIconInfo {\r\n  name: string;\r\n  svgSource: string;\r\n}\r\n\r\ninterface SvgIconMap {\r\n  [iconName: string]: SVGElement;\r\n}\r\n\r\n/**\r\n * A custom replacement for Angular Material's `MdIconRegistry`, which allows\r\n * us to provide preloaded icon SVG sources.\r\n */\r\n@Injectable()\r\nexport class CustomMdIconRegistry extends MdIconRegistry {\r\n  private preloadedSvgElements: SvgIconMap = {};\r\n\r\n  constructor(http: Http, sanitizer: DomSanitizer, @Inject(SVG_ICONS) svgIcons: SvgIconInfo[]) {\r\n    super(http, sanitizer);\r\n    this.loadSvgElements(svgIcons);\r\n  }\r\n\r\n  getNamedSvgIcon(iconName, namespace) {\r\n    if (this.preloadedSvgElements[iconName]) {\r\n      return of(this.preloadedSvgElements[iconName].cloneNode(true));\r\n    }\r\n    return super.getNamedSvgIcon(iconName, namespace);\r\n  }\r\n\r\n  private loadSvgElements(svgIcons: SvgIconInfo[]) {\r\n    const div = document.createElement('DIV');\r\n    svgIcons.forEach(icon => {\r\n      // SECURITY: the source for the SVG icons is provided in code by trusted developers\r\n      div.innerHTML = icon.svgSource;\r\n      this.preloadedSvgElements[icon.name] = div.querySelector('svg');\r\n    });\r\n  }\r\n}\r\n"
  ]
}